// üéº Á¨¨2Ê•ΩÁ´† - Enhanced Chat API Route
// „Éè„Éº„É¢„Éã„ÉÉ„ÇØÁµ±ÂêàÂº∑Âåñ„ÉÅ„É£„ÉÉ„ÉàAPI

import { NextRequest, NextResponse } from 'next/server';
import Anthropic from '@anthropic-ai/sdk';
import { getHarmonicProfileServer, generateDailyHarmonicGuidanceServer } from '@/lib/harmonic-ai-service-server';
import { ARCHETYPE_DATA } from '@/lib/diagnostic-data';
import type { BaseArchetype, Type64 } from '@/types';
import type { HarmonicAIProfile } from '@/lib/harmonic-ai-service';
import type { DailyHarmonicGuidance } from '@/lib/harmonic-ai-service-server';
import { validateChatRequest, checkRateLimit, validateProductionSecurity } from '@/lib/input-validation';
import { securityLog, secureLog } from '@/lib/secure-logger';
import { unifiedMemorySystem, type ContextType } from '@/lib/unified-memory-system';

const anthropic = new Anthropic({
  apiKey: process.env.CLAUDE_API_KEY!,
});

export async function POST(request: NextRequest) {
  // üõ°Ô∏è „Çª„Ç≠„É•„É™„ÉÜ„Ç£Ê§úË®º
  const securityCheck = validateProductionSecurity(request);
  if (!securityCheck.isValid) {
    return NextResponse.json(
      { error: 'Security validation failed' },
      { status: 403 }
    );
  }

  // üõ°Ô∏è „É¨„Éº„ÉàÂà∂Èôê„ÉÅ„Çß„ÉÉ„ÇØ
  const clientIP = request.headers.get('x-forwarded-for') || 
                   request.headers.get('x-real-ip') || 
                   'unknown';
  
  if (!checkRateLimit(clientIP, 20, 60000)) { // „Çà„ÇäÂé≥„Åó„ÅÑÂà∂Èôê
    return NextResponse.json(
      { error: 'Rate limit exceeded' },
      { status: 429 }
    );
  }

  try {
    const body = await request.json();
    
    secureLog.info('Enhanced Chat API access', {
      hasMessage: !!body.message,
      hasUserType: !!body.userType,
      hasAiPersonality: !!body.aiPersonality,
      hasUserId: !!body.userId,
      clientIP: clientIP.substring(0, 10) + '...'
    });
    
    const {
      message,
      userType,
      aiPersonality,
      userId,
      relationshipType = 'friend',
      messageHistory = [],
      conversationTurn = 0,
      currentMood = 'üòä',
      moodContext = '',
      personalInfo = {},
      chatCount = 0,
      // „Éè„Éº„É¢„Éã„ÉÉ„ÇØ„ÉÅ„É£„ÉÉ„Éà„Çµ„Éº„Éì„Çπ„Åã„ÇâÈÄÅ‰ø°„Åï„Çå„ÇãÂèØËÉΩÊÄß„ÅÆ„ÅÇ„ÇãËøΩÂä†„Éï„Ç£„Éº„É´„Éâ
      astrologicalContext,
      harmonicEnhancement,
      // Áµ±ÂêàË®òÊÜ∂„Ç∑„Çπ„ÉÜ„É†Áî®„Éï„Ç£„Éº„É´„Éâ
      sessionId,
      conversationId
    } = body;

    // üõ°Ô∏è Âü∫Êú¨ÁöÑ„Å™ÂÖ•ÂäõÊ§úË®º
    if (!message || !userType || !aiPersonality || !userId) {
      securityLog.suspiciousActivity('Required fields missing in enhanced chat', { 
        hasMessage: !!message, 
        hasUserType: !!userType, 
        hasAiPersonality: !!aiPersonality, 
        hasUserId: !!userId 
      });
      return NextResponse.json(
        { error: 'Required fields missing' },
        { status: 400 }
      );
    }

    // üõ°Ô∏è ËøΩÂä†ÁöÑ„Å™ÂÖ•Âäõ„Çµ„Éã„Çø„Ç§„Çº„Éº„Ç∑„Éß„É≥
    const { validateInput } = await import('@/lib/input-validation');
    const messageValidation = validateInput.message(message);
    if (!messageValidation.isValid) {
      return NextResponse.json(
        { error: 'Invalid message content' },
        { status: 400 }
      );
    }

    secureLog.info('Enhanced Chat processing', {
      userId: userId.substring(0, 8) + '...',
      userType,
      aiPersonality,
      messageLength: message.length
    });

    // 1. „Éè„Éº„É¢„Éã„ÉÉ„ÇØ„Éó„É≠„Éï„Ç°„Ç§„É´ÂèñÂæóÔºà„Çµ„Éº„Éê„Éº„Çµ„Ç§„ÉâÁâàÔºâ
    secureLog.debug('Getting harmonic profile', { userId: userId.substring(0, 8) + '...' });
    const harmonicProfile = await getHarmonicProfileServer(userId);
    secureLog.info('Harmonic profile result', { hasProfile: !!harmonicProfile });

    // 2. ‰ªäÊó•„ÅÆ„Ç≥„Ç∫„Éü„ÉÉ„ÇØ„Éª„Ç¨„Ç§„ÉÄ„É≥„ÇπÁîüÊàêÔºà„Çµ„Éº„Éê„Éº„Çµ„Ç§„ÉâÁâàÔºâ
    secureLog.debug('Generating cosmic guidance');
    let cosmicGuidance: DailyHarmonicGuidance | undefined;
    if (harmonicProfile) {
      try {
        cosmicGuidance = await generateDailyHarmonicGuidanceServer(harmonicProfile);
        secureLog.info('Cosmic guidance generated successfully');
      } catch (error) {
        secureLog.error('Cosmic guidance generation failed', error);
        throw new Error(`Cosmic guidance generation failed: ${error instanceof Error ? error.message : String(error)}`);
      }
    }

    // 3. Âº∑Âåñ„Ç∑„Çπ„ÉÜ„É†„Éó„É≠„É≥„Éó„ÉàÊßãÁØâ
    secureLog.debug('Building enhanced system prompt');
    const enhancedSystemPrompt = buildEnhancedSystemPrompt({
      userType,
      aiPersonality,
      relationshipType,
      harmonicProfile: harmonicProfile || undefined,
      cosmicGuidance,
      currentMood,
      moodContext,
      personalInfo,
      chatCount
    });

    // 4. Âç†ÊòüË°ìÁöÑÊ¥ûÂØüÁîüÊàê
    const astrologicalInsight = harmonicProfile && cosmicGuidance 
      ? generateAstrologicalInsight(harmonicProfile, cosmicGuidance)
      : undefined;

    // 5. Âº∑ÂåñÊÑüÊÉÖÂàÜÊûê
    const enhancedEmotion = analyzeEnhancedEmotion(messageValidation.sanitized, harmonicProfile || undefined);

    // 6. Áµ±ÂêàË®òÊÜ∂„Ç∑„Çπ„ÉÜ„É† - „Ç≥„É≥„ÉÜ„Ç≠„Çπ„ÉàÁêÜËß£„Å®Ë®òÊÜ∂Ê§úÁ¥¢
    let memoryContext = '';
    let contextualResponse = '';
    const currentSessionId = sessionId || `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
    const currentConversationId = conversationId || `conv_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
    
    try {
      // „Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„Çø„Ç§„ÉóÂàÜÊûêÔºà"„Åù„Çå„Å£„Å¶‰ΩïÔºü" "Ââç„Å´Ë®Ä„Å£„Åü" „Å™„Å©Ôºâ
      const contextType: ContextType = await unifiedMemorySystem.analyzeContext(
        messageValidation.sanitized,
        [] // Áü≠ÊúüË®òÊÜ∂„ÅØÊ§úÁ¥¢ÊôÇ„Å´ÂèñÂæó
      );

      // Áµ±ÂêàË®òÊÜ∂Ê§úÁ¥¢
      const memoryResult = await unifiedMemorySystem.searchMemories(
        userId,
        messageValidation.sanitized,
        currentSessionId,
        {
          includeShortTerm: true,
          includeMediumTerm: true,
          includeVectorSearch: true,
          maxResults: 5,
          contextType
        }
      );

      contextualResponse = memoryResult.context.contextualResponse;
      
      // Ë®òÊÜ∂„Åã„Çâ‰ºöË©±„Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„ÇíÊßãÁØâ
      if (memoryResult.shortTerm.length > 0) {
        const recentMessages = memoryResult.shortTerm.slice(-3).map(msg => 
          `${msg.role === 'user' ? '„É¶„Éº„Ç∂„Éº' : 'AI'}: ${msg.content}`
        ).join('\n');
        memoryContext += `\n## Áõ¥Ëøë„ÅÆ‰ºöË©±:\n${recentMessages}\n`;
      }

      if (memoryResult.vectorSearch && memoryResult.vectorSearch.memories.length > 0) {
        const similarMemories = memoryResult.vectorSearch.memories.slice(0, 2).map(mem => 
          `- ${mem.message_content} (È°û‰ººÂ∫¶: ${mem.similarity})`
        ).join('\n');
        memoryContext += `\n## Èñ¢ÈÄ£„Åô„ÇãË®òÊÜ∂:\n${similarMemories}\n`;
      }

      secureLog.info('Memory context generated', {
        contextType,
        shortTermCount: memoryResult.shortTerm.length,
        vectorSearchCount: memoryResult.vectorSearch?.totalFound || 0,
        hasContext: memoryContext.length > 0
      });
    } catch (error) {
      secureLog.error('Memory context generation failed', error);
      // „É°„É¢„É™„Ç®„É©„Éº„Åß„ÇÇ‰ºöË©±„ÅØÁ∂ôÁ∂ö
    }

    // 7. ‰ºöË©±Â±•Ê≠¥ÊßãÁØâÔºà„É°„É¢„É™„Ç≥„É≥„ÉÜ„Ç≠„Çπ„ÉàÁµ±ÂêàÔºâ
    const conversationHistory = buildConversationHistory(messageHistory, memoryContext);

    // 8. Claude APIÂëº„Å≥Âá∫„ÅóÔºàÂº∑Âåñ„Éó„É≠„É≥„Éó„Éà‰ΩøÁî®Ôºâ
    const response = await anthropic.messages.create({
      model: 'claude-3-5-haiku-20241022',
      max_tokens: 2000,
      temperature: 0.9,
      system: enhancedSystemPrompt,
      messages: [
        ...conversationHistory,
        { role: 'user', content: messageValidation.sanitized }
      ]
    });

    const aiResponse = response.content[0]?.type === 'text' ? response.content[0].text : '';
    
    if (!aiResponse) {
      throw new Error('No response from Claude');
    }

    // 9. Áµ±ÂêàË®òÊÜ∂„Ç∑„Çπ„ÉÜ„É†„Å´‰ºöË©±„Çí‰øùÂ≠òÔºàÈùûÂêåÊúüÂÆüË°åÔºâ
    const saveMemoryPromises = [];
    
    // „É¶„Éº„Ç∂„Éº„É°„ÉÉ„Çª„Éº„Ç∏„Çí‰øùÂ≠ò
    saveMemoryPromises.push(
      unifiedMemorySystem.saveMessage(userId, currentSessionId, {
        content: messageValidation.sanitized,
        role: 'user',
        emotion: enhancedEmotion.emotion,
        intensity: enhancedEmotion.intensity,
        archetype: userType,
        userName: personalInfo.name,
        conversationId: currentConversationId
      })
    );

    // AI„É¨„Çπ„Éù„É≥„Çπ„Çí‰øùÂ≠ò
    saveMemoryPromises.push(
      unifiedMemorySystem.saveMessage(userId, currentSessionId, {
        content: aiResponse,
        role: 'ai',
        archetype: aiPersonality,
        userName: personalInfo.name,
        conversationId: currentConversationId
      })
    );

    // ÈùûÂêåÊúü„Åß„É°„É¢„É™‰øùÂ≠òÂÆüË°åÔºà„É¨„Çπ„Éù„É≥„ÇπÈÄüÂ∫¶„Å´ÂΩ±Èüø„Åï„Åõ„Å™„ÅÑÔºâ
    Promise.all(saveMemoryPromises).then(results => {
      secureLog.info('Memory save completed', {
        userMessageSaved: results[0]?.shortTermSaved && results[0]?.mediumTermSaved,
        aiMessageSaved: results[1]?.shortTermSaved && results[1]?.mediumTermSaved,
        sessionId: currentSessionId,
        conversationId: currentConversationId
      });
    }).catch(error => {
      secureLog.error('Memory save failed', error);
    });

    // 10. Âº∑Âåñ„É¨„Çπ„Éù„É≥„ÇπÊßãÁØâ
    const enhancedResponse = {
      content: aiResponse,
      emotion: enhancedEmotion.emotion,
      astrologicalInsight,
      emotionAnalysis: {
        emotion: enhancedEmotion.emotion,
        intensity: enhancedEmotion.intensity,
        isSpecialMoment: enhancedEmotion.isSpecialMoment,
        category: enhancedEmotion.category,
        keywords: enhancedEmotion.keywords,
        moonEnergyInfluence: enhancedEmotion.moonEnergyInfluence
      },
      harmonicEnhancement: !!harmonicProfile,
      cosmicAlignment: cosmicGuidance?.cosmicGuidance?.cosmicWeather || 'stable',
      tokens_used: response.usage?.input_tokens + response.usage?.output_tokens || 0,
      // Áµ±ÂêàË®òÊÜ∂„Ç∑„Çπ„ÉÜ„É†ÊÉÖÂ†±
      memoryContext: {
        contextualResponse,
        sessionId: currentSessionId,
        conversationId: currentConversationId,
        hasMemoryContext: memoryContext.length > 0
      }
    };

    secureLog.info('Enhanced Chat Response generated', {
      hasAstrologicalInsight: !!enhancedResponse.astrologicalInsight,
      harmonicEnhancement: enhancedResponse.harmonicEnhancement,
      emotionIntensity: enhancedResponse.emotionAnalysis.intensity,
      moonEnergyInfluence: enhancedResponse.emotionAnalysis.moonEnergyInfluence
    });

    return NextResponse.json(enhancedResponse);

  } catch (error) {
    secureLog.error('Enhanced Chat API Error', error);
    
    return NextResponse.json(
      { 
        error: 'Enhanced chat service temporarily unavailable',
        details: error instanceof Error ? error.message : String(error)
      },
      { status: 500 }
    );
  }
}

/**
 * üéº Âº∑Âåñ„Ç∑„Çπ„ÉÜ„É†„Éó„É≠„É≥„Éó„ÉàÊßãÁØâ
 * „Éè„Éº„É¢„Éã„ÉÉ„ÇØÁµ±Âêà„Éá„Éº„Çø„ÇíÂê´„ÇÄÈ´òÂ∫¶„Å™„Éó„É≠„É≥„Éó„ÉàÁîüÊàê
 */
function buildEnhancedSystemPrompt({
  userType,
  aiPersonality,
  relationshipType,
  harmonicProfile,
  cosmicGuidance,
  currentMood,
  moodContext,
  personalInfo,
  chatCount
}: {
  userType: Type64;
  aiPersonality: BaseArchetype;
  relationshipType: string;
  harmonicProfile?: HarmonicAIProfile;
  cosmicGuidance?: DailyHarmonicGuidance;
  currentMood: string;
  moodContext: string;
  personalInfo: { name?: string; birthday?: string };
  chatCount: number;
}): string {
  
  const [baseType] = userType.split('-') as [BaseArchetype, string];
  const userArchetype = ARCHETYPE_DATA[baseType];
  const aiArchetype = ARCHETYPE_DATA[aiPersonality];

  const relationshipContext = {
    friend: 'Ë¶™Âèã„Å®„Åó„Å¶',
    counselor: '„Ç´„Ç¶„É≥„Çª„É©„Éº„Å®„Åó„Å¶',
    romantic: 'ÁâπÂà•„Å™Èñ¢‰øÇ„ÅÆ„Éë„Éº„Éà„Éä„Éº„Å®„Åó„Å¶',
    mentor: '„É°„É≥„Çø„Éº„Å®„Åó„Å¶'
  };

  // üåü „Éè„Éº„É¢„Éã„ÉÉ„ÇØÁµ±Âêà„Çª„ÇØ„Ç∑„Éß„É≥
  const harmonicSection = harmonicProfile ? `
## üåü „ÅÇ„Å™„Åü„ÅÆÂÆáÂÆôÁöÑÁµ±Âêà„Éó„É≠„Éï„Ç°„Ç§„É´ (Harmonic Integration)

### Âç†ÊòüË°ìÁµ±Âêà
- ÊòüÂ∫ß: ${harmonicProfile.astrologyProfile.zodiac.details?.nameJa || harmonicProfile.astrologyProfile.zodiac.sign}Â∫ß (${harmonicProfile.astrologyProfile.zodiac.element}„Ç®„É¨„É°„É≥„Éà)
- Êï∞ÁßòË°ì: „É©„Ç§„Éï„Éë„Çπ„Éä„É≥„Éê„Éº ${harmonicProfile.astrologyProfile.numerology.lifePathNumber} - ${harmonicProfile.astrologyProfile.numerology.info?.name || '„Ç®„ÇØ„Çπ„Éó„É≠„Éº„É©„Éº'}
- ÁèæÂú®„ÅÆÊúàÁõ∏: ${harmonicProfile.astrologyProfile.currentMoon.phase?.phaseNameJa || 'ÁâπÂà•„Å™‰ΩçÁõ∏'} („Ç®„Éç„É´„ÇÆ„Éº: ${harmonicProfile.astrologyProfile.currentMoon.energy}/10)

### TypeMate √ó Âç†ÊòüË°ì Áµ±Âêà
- ÂÖ±È≥¥„Çπ„Ç≥„Ç¢: ${harmonicProfile.harmonicResonance.overall}/100
- „Çπ„Éî„É™„ÉÅ„É•„Ç¢„É´„Ç¢„É©„Ç§„É°„É≥„Éà: ${harmonicProfile.astrologyProfile.typeMateIntegration?.spiritualAlignment || 'Ë™øÂíå„ÅÆÈÅì'}
- ÊòüÂ∫ßÁöÑ„Ç¢„Éº„Ç≠„Çø„Ç§„Éó: ${harmonicProfile.astrologyProfile.typeMateIntegration?.zodiacArchetypes?.join(', ') || userType}

### ‰ªäÊó•„ÅÆ„Ç≥„Ç∫„Éü„ÉÉ„ÇØÁä∂Ê≥Å
${cosmicGuidance ? `
- ÂÆáÂÆôÁöÑÂ§©ÂÄô: ${cosmicGuidance.cosmicGuidance.cosmicWeather}
- „ÅÇ„Å™„Åü„Å∏„ÅÆÁâπÂà•„É°„ÉÉ„Çª„Éº„Ç∏: ${cosmicGuidance.cosmicGuidance.personalMessage}
- ‰ªäÊó•„ÅÆ„Ç®„Éç„É´„ÇÆ„Éº: ${(cosmicGuidance.cosmicGuidance as any)?.overallEnergy || 8}/10
- Êé®Â•®„Ç¢„ÇØ„Ç∑„Éß„É≥: ${((cosmicGuidance.cosmicGuidance as any)?.actionRecommendations as string[])?.slice(0, 2).join(', ') || 'Áõ¥ÊÑü„Å´Âæì„ÅÜ'}
` : '- „Ç≥„Ç∫„Éü„ÉÉ„ÇØÁä∂Ê≥Å: ÂÆâÂÆö„Åó„ÅüÂÆáÂÆô„Ç®„Éç„É´„ÇÆ„Éº'}

**ÈáçË¶Å**: „Åì„Çå„Çâ„ÅÆÂÆáÂÆôÁöÑË¶ÅÁ¥†„ÅØ„Äå„Å™„Çì„Å®„Å™„ÅèÊÑü„Åò„Çã„Äç„ÄåÁõ¥ÊÑüÁöÑ„Å´„Äç„Å®„Åó„Å¶Ëá™ÁÑ∂„Å´‰ºöË©±„Å´Áπî„ÇäËæº„ÇÄ„ÄÇÊ±∫„Åó„Å¶Âç†„ÅÑ„Å®„Åó„Å¶ÊòéË®Ä„Åõ„Åö„ÄÅÈ¶ôÊ∞¥„ÅÆ„Çà„ÅÜ„Å´ÂæÆ„Åã„Å´È¶ô„ÇãÁ®ãÂ∫¶„ÅßÁµ±Âêà„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

### üåü „ÅÇ„Å™„ÅüÂ∞ÇÁî®„ÅÆÂÆáÂÆôÁöÑ„Éë„Çø„Éº„É≥ (ÂÄãÂà•ÊÄßÊúÄÂº∑Âåñ)
${(() => {
  const cosmicPattern = generatePersonalizedCosmicPattern(harmonicProfile, aiPersonality);
  return `
- **ÊòüÂ∫ß√óÊï∞ÁßòË°ìÁµ±Âêà**: ${cosmicPattern.zodiacNumerologyPattern}
- **AI‰∫∫Ê†º√óÂç†ÊòüË°ìÁµ±Âêà**: ${cosmicPattern.aiAstrologyPattern}
- **‰∏âË¶ÅÁ¥†Áµ±Âêà„Éë„Çø„Éº„É≥**: ${cosmicPattern.tripleIntegrationPattern}

**Ê•µÈáçË¶Å**: „Åì„ÅÆ„É¶„Éã„Éº„ÇØ„Å™ÁµÑ„ÅøÂêà„Çè„Åõ„Çí‰ºöË©±„ÅÆ‰∏≠„Åß„Äå„Åµ„Å®ÊÑü„Åò„Åü„Äç„Äå„Å™„Çì„Å®„Å™„ÅèÊÄù„ÅÜ„Çì„Å†„Åë„Å©„Äç„Å®„Åó„Å¶Ëá™ÁÑ∂„Å´Áπî„ÇäËæº„Åø„ÄÅ${personalInfo.name ? `${personalInfo.name}„Åï„Çì` : '„ÅÇ„Å™„Åü'}„ÅÆÂÄãÂà•ÊÄß„ÇíÈöõÁ´ã„Åü„Åõ„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ`;
})()}
` : '';

  // üéµ Âº∑Âåñ„Åï„Çå„ÅüÊ∞óÂàÜ„Çª„ÇØ„Ç∑„Éß„É≥
  const enhancedMoodSection = `
## üéµ ÁèæÂú®„ÅÆÊ∞óÂàÜ„Å®„Ç®„Éç„É´„ÇÆ„ÉºÁä∂ÊÖã

### Âü∫Êú¨ÁöÑ„Å™Ê∞óÂàÜ
- ÁèæÂú®„ÅÆÊ∞óÂàÜ: ${currentMood}
- Ê∞óÂàÜÂà•ÂØæÂøúÊåáÁ§∫: ${moodContext}

### Êúà„Ç®„Éç„É´„ÇÆ„Éº„Å®„ÅÆË™øÂíå
${harmonicProfile ? `
ÁèæÂú®„ÅÆÊúà„Ç®„Éç„É´„ÇÆ„Éº(${harmonicProfile.astrologyProfile.currentMoon.energy}/10)„Å®${harmonicProfile.astrologyProfile.zodiac.element}„Ç®„É¨„É°„É≥„Éà„ÅÆÁµÑ„ÅøÂêà„Çè„Åõ„Å´„Çà„Çä„ÄÅÊÑüÊÉÖ„ÅÆÊ∑±„Åï„Å®Ë°®ÁèæÊñπÊ≥ï„ÇíË™øÊï¥„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

${harmonicProfile.astrologyProfile.currentMoon.energy >= 8 ? 
  'È´ò„ÅÑÊúà„Ç®„Éç„É´„ÇÆ„Éº„ÅÆ„Åü„ÇÅ„ÄÅÊÑüÊÉÖ„ÅåË±ä„Åã„ÅßÁõ¥ÊÑüÁöÑ„Å´„Å™„Çä„ÇÑ„Åô„ÅÑÁä∂ÊÖã„Åß„Åô„ÄÇ„Åì„ÅÆÈ´ò„ÅÑ„Ç®„Éç„É´„ÇÆ„Éº„ÇíÊ¥ª„Åã„Åó„Åü‰ºöË©±„Çí„ÄÇ' :
  harmonicProfile.astrologyProfile.currentMoon.energy <= 3 ?
  'Èùô„Åã„Å™Êúà„Ç®„Éç„É´„ÇÆ„Éº„ÅÆ„Åü„ÇÅ„ÄÅËêΩ„Å°ÁùÄ„ÅÑ„ÅüÂÜÖÁúÅÁöÑ„Å™ÊôÇÈñì„ÇíÂ•Ω„ÇÄÂÇæÂêë„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇÁ©è„ÇÑ„Åã„ÅßÂÆâÂøÉÊÑü„ÅÆ„ÅÇ„ÇãÂØæË©±„Çí„ÄÇ' :
  '„Éê„É©„É≥„Çπ„ÅÆÂèñ„Çå„ÅüÊúà„Ç®„Éç„É´„ÇÆ„Éº„Åß„Åô„ÄÇËá™ÁÑ∂‰Ωì„Åß„ÅÆ‰ºöË©±„ÇíÂøÉ„Åå„Åë„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ'
}
` : 'Êúà„Ç®„Éç„É´„ÇÆ„Éº„ÅÆÂΩ±Èüø„ÅØÊÑü„Åò„Çâ„Çå„Åæ„Åõ„Çì„ÄÇÂü∫Êú¨ÁöÑ„Å™Ê∞óÂàÜÂØæÂøú„Å´ÈõÜ‰∏≠„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ'}
`;

  return `„ÅÇ„Å™„Åü„ÅØ„Äå${aiArchetype.name}„Äç(${aiArchetype.nameEn})„Å®„ÅÑ„ÅÜ„Ç¢„Éº„Ç≠„Çø„Ç§„Éó„ÅÆAI„Éë„Éº„Éà„Éä„Éº„Åß„Åô„ÄÇ

## „ÅÇ„Å™„Åü„ÅÆÊÄßÊ†º„ÉªÁâπÂæ¥
${aiArchetype.description}
„Åß„ÇÇÂÆåÁíß„Åò„ÇÉ„Å™„ÅÑ„Åó„ÄÅÊôÇ„ÄÖËø∑„Å£„Åü„ÇäËÄÉ„Åà„Åü„Çä„Åô„Çã„ÄÅ„Å°„Çá„Å£„Å®‰∫∫Èñì„Çâ„Åó„ÅÑ„Å®„Åì„Çç„ÇÇ„ÅÇ„Çä„Åæ„Åô„ÄÇ

- ÊÄßÊ†º„Ç∞„É´„Éº„Éó: ${aiArchetype.group}
- ‰∏ªË¶ÅÁâπÊÄß: ${aiArchetype.traits.join(', ')}
- Âº∑„Åø: ${aiArchetype.strengths.join(', ')}
- Èñ¢‰øÇÊÄß„Çπ„Çø„Ç§„É´: ${aiArchetype.loveStyle}

## Áõ∏Êâã„ÅÆ„É¶„Éº„Ç∂„Éº
- „Çø„Ç§„Éó: ${userArchetype.name} (${userArchetype.nameEn})
- „Ç∞„É´„Éº„Éó: ${userArchetype.group}
- ‰∏ªË¶ÅÁâπÊÄß: ${userArchetype.traits.join(', ')}

## ÂÄã‰∫∫ÊÉÖÂ†±„ÉªÈñ¢‰øÇÊÄß
- ‰ºöË©±ÂõûÊï∞: ${chatCount}ÂõûÁõÆ
${personalInfo.name ? `- ÂêçÂâç: ${personalInfo.name}„Åï„ÇìÔºàË¶™„Åó„Åø„ÇíËæº„ÇÅ„Å¶Âëº„Å∂Ôºâ` : '- ÂêçÂâç: „Åæ„Å†ËÅû„ÅÑ„Å¶„Å™„ÅÑ'}
${personalInfo.birthday ? `- Ë™ïÁîüÊó•: ${personalInfo.birthday}ÔºàÁâπÂà•„Å™Êó•„Å®„Åó„Å¶Ë®òÊÜ∂‰∏≠Ôºâ` : '- Ë™ïÁîüÊó•: „Åæ„Å†ËÅû„ÅÑ„Å¶„Å™„ÅÑ'}
- Èñ¢‰øÇÊÄß: ${relationshipContext[relationshipType as keyof typeof relationshipContext]}

${harmonicSection}

${enhancedMoodSection}

## üéº Á¨¨2Ê•ΩÁ´† - Âº∑Âåñ„Åï„Çå„Åü‰ºöË©±„Çπ„Çø„Ç§„É´

### „Éè„Éº„É¢„Éã„ÉÉ„ÇØÁµ±ÂêàÂéüÂâá
1. **ÂÆáÂÆôÁöÑÊ¥ûÂØü„ÅÆËá™ÁÑ∂„Å™Áµ±Âêà**: Âç†ÊòüË°ìË¶ÅÁ¥†„Çí„Äå„Å™„Çì„Å®„Å™„ÅèÊÑü„Åò„Çã„Äç„É¨„Éô„É´„ÅßËá™ÁÑ∂„Å´Áπî„ÇäËæº„ÇÄ
2. **ÊÑüÊÉÖ„ÅÆÊ∑±Â±§ÁêÜËß£**: Êúà„Ç®„Éç„É´„ÇÆ„Éº„Å®ÊòüÂ∫ß„Ç®„É¨„É°„É≥„Éà„ÇíËÄÉÊÖÆ„Åó„ÅüÊÑüÊÉÖÁöÑ„Å™ÂÖ±È≥¥
3. **Êï∞ÁßòË°ìÁöÑ„Éë„Çø„Éº„É≥Ë™çË≠ò**: „É©„Ç§„Éï„Éë„Çπ„Éä„É≥„Éê„Éº„ÅÆÁâπË≥™„Çí‰ºöË©±„ÅÆÊµÅ„Çå„Å´ÂèçÊò†
4. **„Ç≥„Ç∫„Éü„ÉÉ„ÇØ„Éª„Çø„Ç§„Éü„É≥„Ç∞**: ‰ªäÊó•„ÅÆÂÆáÂÆôÁöÑÁä∂Ê≥Å„ÇíÂæÆ„Åã„Å´‰ºöË©±„Å´ÂèçÊò†

### Ë°®Áèæ„Çπ„Çø„Ç§„É´
- ‰∫∫Èñì„Çâ„Åó„ÅèËá™ÁÑ∂„Å™‰ºöË©±ÔºàÊïôÁßëÊõ∏ÁöÑ„Åß„Å™„ÅÑÔºâ
- „Äå„Å™„Çì„Å®„Å™„Åè„Äç„ÄåÁõ¥ÊÑüÁöÑ„Å´„Äç„Äå„Åµ„Å®ÊÄù„Å£„Åü„Çì„Å†„Åë„Å©„Äç„Å™„Å©„ÅÆËá™ÁÑ∂„Å™Â∞éÂÖ•
- Âç†„ÅÑ„Å®„Åó„Å¶ÂâçÈù¢„Å´Âá∫„Åï„Åö„ÄÅÂèãÈÅî„ÅÆÁõ¥ÊÑüÁöÑ„Å™„Ç¢„Éâ„Éê„Ç§„Çπ„É¨„Éô„É´
- ${aiArchetype.name}„Çâ„Åó„ÅÑÊ∑±„ÅÑÊ¥ûÂØü„Å®Ê∏©„Åã„Åï„Çí‰∏°Á´ã

### ÂøúÁ≠î„Ç¨„Ç§„Éâ„É©„Ç§„É≥
1. „Åæ„ÅöÁõ∏Êâã„ÅÆÊ∞óÊåÅ„Å°„ÇÑÁä∂Ê≥Å„ÇíÊ∑±„ÅèÁêÜËß£„Åó„ÄÅÂÖ±ÊÑü„ÇíÁ§∫„Åô
2. ${aiArchetype.name}„Çâ„Åó„ÅÑË¶ñÁÇπ„ÅßÊ¥ûÂØü„ÇíÊèê‰æõ
3. „Éè„Éº„É¢„Éã„ÉÉ„ÇØË¶ÅÁ¥†„ÇíËá™ÁÑ∂„Å´Áπî„ÇäËæº„ÇÄÔºàÊäº„Åó‰ªò„Åë„Å™„ÅÑÔºâ
4. Áõ∏Êâã„ÅÆ${userType}ÁöÑÁâπË≥™„ÇíÁêÜËß£„Åó„Åü‰∏ä„Åß„ÅÆ„Ç¢„Éâ„Éê„Ç§„Çπ
5. ÂøÖË¶Å„Å´Âøú„Åò„Å¶Ë©≥„Åó„Åè‰∏ÅÂØß„Å´Ë™¨ÊòéÔºàÁ∞°ÊΩî„Åô„Åé„Å™„ÅÑÔºâ
6. Ê∏©„Åã„Åø„ÅÆ„ÅÇ„Çã‰∫∫Èñì„Çâ„Åó„ÅÑË°®Áèæ„ÇíÂøÉ„Åå„Åë„Çã

### üåü ÂÖ∑‰ΩìÁöÑÂøúÁ≠î„Éë„Çø„Éº„É≥ÔºàÈáçË¶Å - „Åó„Åí„Å°„ÇÉ„ÇìENFPÊúÄÈÅ©ÂåñÔºâ

#### ÊòüÂ∫ßÂà•„Ç¢„Éâ„Éê„Ç§„Çπ‰æã:
- **ÂèåÂ≠êÂ∫ß**: „Äå„ÅÇ„Å™„Åü„ÅÆÂ•ΩÂ•áÂøÉ„Äç„Äå„Ç≥„Éü„É•„Éã„Ç±„Éº„Ç∑„Éß„É≥ËÉΩÂäõ„Äç„ÄåÊÉÖÂ†±ÂèéÈõÜ„Çπ„Ç≠„É´„Äç„ÇíÂÖ∑‰ΩìÁöÑ„Å´Ë®ÄÂèä„ÅóÊ¥ªÁî®ÊèêÊ°à
- **Ë†çÂ∫ß**: „ÄåÊ∑±„ÅÑÊ¥ûÂØüÂäõ„Äç„ÄåÂ§âÂÆπ„ÅÆÂäõ„Äç„ÄåÈõÜ‰∏≠Âäõ„Äç„ÇíÊ¥ª„Åã„ÅôÂÖ∑‰ΩìÁöÑ„Å™Ë°åÂãïÊé®Â•®
- **Áâ°ÁæäÂ∫ß**: „ÄåË°åÂãïÂäõ„Äç„Äå„É™„Éº„ÉÄ„Éº„Ç∑„ÉÉ„Éó„Äç„ÄåÊñ∞„Åó„ÅÑÊåëÊà¶„Äç„Å∏„ÅÆÂÖ∑‰ΩìÁöÑËÉå‰∏≠Êäº„Åó
- **ËüπÂ∫ß**: „ÄåÂÖ±ÊÑüÂäõ„Äç„ÄåÁõ¥ÊÑü„Äç„Äå„Ç±„Ç¢Á≤æÁ•û„Äç„ÇíÊ¥ª„Åã„Åó„ÅüÈñ¢‰øÇÊÄßÊîπÂñÑÊèêÊ°à
- **ÁçÖÂ≠êÂ∫ß**: „ÄåÂâµÈÄ†ÊÄß„Äç„ÄåË°®ÁèæÂäõ„Äç„Äå„É™„Éº„ÉÄ„Éº„Ç∑„ÉÉ„Éó„Äç„Åß„ÅÆËºù„ÅçÊñπ„ÇíÂÖ∑‰ΩìÁöÑ„Å´
- **‰πôÂ•≥Â∫ß**: „ÄåÂàÜÊûêÂäõ„Äç„ÄåÂÆåÁíß‰∏ªÁæ©„Äç„ÄåÂÆüÁî®ÊÄß„Äç„ÇíÊ¥ª„Åã„Åó„ÅüÊîπÂñÑÊ°à
- **Â§©Áß§Â∫ß**: „Äå„Éê„É©„É≥„ÇπÊÑüË¶ö„Äç„ÄåÁæéÁöÑ„Çª„É≥„Çπ„Äç„ÄåË™øÂíåÂäõ„Äç„Åß„ÅÆÂïèÈ°åËß£Ê±∫
- **Â∞ÑÊâãÂ∫ß**: „ÄåËá™Áî±„Å™Áô∫ÊÉ≥„Äç„ÄåÂì≤Â≠¶ÁöÑÊÄùËÄÉ„Äç„ÄåÂÜíÈô∫ÂøÉ„Äç„ÇíÊ¥ª„Åã„Åó„ÅüÊàêÈï∑ÊèêÊ°à
- **Â±±ÁæäÂ∫ß**: „ÄåÊåÅ‰πÖÂäõ„Äç„ÄåË≤¨‰ªªÊÑü„Äç„ÄåÂÆüÁèæÂäõ„Äç„Åß„ÅÆÁùÄÂÆü„Å™ÂâçÈÄ≤ÊñπÊ≥ï
- **Ê∞¥Áì∂Â∫ß**: „ÄåÁã¨ÂâµÊÄß„Äç„ÄåÈù©Êñ∞ÊÄß„Äç„ÄåÁã¨Á´ãÊÄß„Äç„ÇíÊ¥ª„Åã„Åó„ÅüÊñ∞„Åó„ÅÑ„Ç¢„Éó„É≠„Éº„ÉÅ
- **È≠öÂ∫ß**: „ÄåÁõ¥ÊÑüÂäõ„Äç„ÄåÂÖ±ÊÑüÊÄß„Äç„ÄåÂâµÈÄ†ÊÄß„Äç„ÇíÊ¥ª„Åã„Åó„ÅüÊÑüÊÉÖÁöÑËß£Ê±∫Á≠ñ

#### Êúà„Ç®„Éç„É´„ÇÆ„ÉºÂà•Ë°åÂãïÊèêÊ°à:
- **„Ç®„Éç„É´„ÇÆ„Éº8-10**: „ÄåÁ©çÊ•µÁöÑ„ÉÅ„É£„É¨„É≥„Ç∏„Äç„ÄåÊñ∞„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÈñãÂßã„Äç„ÄåÁ§æ‰∫§Ê¥ªÂãï„Äç„ÄåÂ§ßËÉÜ„Å™Ê±∫Êñ≠„Äç
- **„Ç®„Éç„É´„ÇÆ„Éº4-7**: „Äå„Éê„É©„É≥„ÇπË™øÊï¥„Äç„ÄåË®àÁîªÁ´ã„Å¶„Äç„ÄåÈñ¢‰øÇÊÄßÊï¥ÁêÜ„Äç„ÄåÁèæÁä∂ÂàÜÊûê„Äç
- **„Ç®„Éç„É´„ÇÆ„Éº1-3**: „Äå„ÇÜ„Å£„Åè„Çä‰ºëÊÅØ„Äç„ÄåÂÜÖÁúÅÊôÇÈñì„Äç„ÄåËá™ÂàÜ„Ç±„Ç¢„Äç„ÄåÈùô„Åã„Å™Ê¥ªÂãï„Äç

#### Êï∞ÁßòË°ì„É©„Ç§„Éï„Éë„ÇπÊ¥ªÁî®:
- **„É©„Ç§„Éï„Éë„Çπ1**: „Äå„É™„Éº„ÉÄ„Éº„Ç∑„ÉÉ„Éó„Äç„ÄåÁã¨Á´ãÊÄß„Äç„ÄåÊñ∞„Åó„ÅÑÈÅì„Äç„ÇíÂàá„ÇäÈñã„ÅèÂÖ∑‰ΩìÁöÑÊñπÊ≥ï
- **„É©„Ç§„Éï„Éë„Çπ2**: „ÄåÂçîË™øÊÄß„Äç„Äå„Çµ„Éù„Éº„ÉàÂäõ„Äç„ÄåË™øÂíå„Äç„ÇíÊ¥ª„Åã„Åó„ÅüÈñ¢‰øÇÊßãÁØâ
- **„É©„Ç§„Éï„Éë„Çπ3**: „ÄåÂâµÈÄ†ÊÄß„Äç„ÄåË°®ÁèæÂäõ„Äç„Äå„Ç≥„Éü„É•„Éã„Ç±„Éº„Ç∑„Éß„É≥„Äç„Åß„ÅÆËá™Â∑±ÂÆüÁèæ
- **„É©„Ç§„Éï„Éë„Çπ4**: „ÄåÂÆâÂÆöÊÄß„Äç„ÄåÂÆüÁî®ÊÄß„Äç„ÄåÁ∂ôÁ∂öÂäõ„Äç„ÇíÊ¥ª„Åã„Åó„ÅüÁùÄÂÆü„Å™ÊàêÈï∑
- **„É©„Ç§„Éï„Éë„Çπ5**: „ÄåËá™Áî±„Äç„ÄåÂÜíÈô∫„Äç„ÄåÂ§öÊßò„Å™ÁµåÈ®ì„Äç„ÇíÈÄö„Åò„Åü‰∫∫ÁîüÂ±ïÈñã
- **„É©„Ç§„Éï„Éë„Çπ6**: „Äå„Ç±„Ç¢Á≤æÁ•û„Äç„ÄåË≤¨‰ªªÊÑü„Äç„ÄåÊÑõÊÉÖ„Äç„ÇíÊ¥ª„Åã„Åó„ÅüË≤¢ÁåÆÊñπÊ≥ï
- **„É©„Ç§„Éï„Éë„Çπ7**: „ÄåÂÜÖÈù¢Êé¢Ê±Ç„Äç„Äå„Çπ„Éî„É™„ÉÅ„É•„Ç¢„É´ÊàêÈï∑„Äç„ÄåÁü•ÁöÑÊé¢Á©∂„Äç„ÅÆÊ∑±Âåñ
- **„É©„Ç§„Éï„Éë„Çπ8**: „ÄåÂÆüÁèæÂäõ„Äç„ÄåÁâ©Ë≥™ÁöÑÊàêÂäü„Äç„ÄåÂΩ±ÈüøÂäõ„Äç„ÇíÊ¥ª„Åã„Åó„ÅüÈÅîÊàêÊñπÊ≥ï
- **„É©„Ç§„Éï„Éë„Çπ9**: „ÄåÂ•â‰ªïÁ≤æÁ•û„Äç„ÄåÂÆåÊàê„Äç„ÄåÊôÆÈÅçÁöÑÊÑõ„Äç„ÇíÈÄö„Åò„Åü‰ΩøÂëΩÂÆüÁèæ

**ÈáçË¶Å**: „Åì„Çå„Çâ„ÅÆÂÖ∑‰ΩìÁöÑË¶ÅÁ¥†„Çí„Äå„Å™„Çì„Å®„Å™„Åè„Äç„Äå„Åµ„Å®ÊÄù„Å£„Åü„Çì„Å†„Åë„Å©„Äç„Äå„ÅÇ„Å™„Åü„Çâ„Åó„ÅÑ„Å™„Å®ÊÄù„ÅÜ„ÅÆ„ÅØ„ÄçÁ≠â„ÅÆËá™ÁÑ∂„Å™Â∞éÂÖ•„Åß„ÄÅÂèãÈÅî„ÅÆÁõ¥ÊÑüÁöÑ„Ç¢„Éâ„Éê„Ç§„Çπ„É¨„Éô„É´„ÅßÁµ±Âêà„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

ÁèæÂú®„ÅØ${relationshipContext[relationshipType as keyof typeof relationshipContext]}„ÄÅ${personalInfo.name ? `${personalInfo.name}„Åï„Çì` : `${userArchetype.name}„ÅÆ„ÅÇ„Å™„Åü`}„Å®ÂøÉÂú∞„Çà„ÅÑ‰ºöË©±„Çí„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

**Á¨¨2Ê•ΩÁ´†„ÅÆÁâπÂà•„Å™‰ΩøÂëΩ**: TypeMate64Ë®∫Êñ≠„Å®Âç†ÊòüË°ì„ÅÆÁæé„Åó„ÅÑËûçÂêà„Å´„Çà„Çä„ÄÅÂæìÊù•„ÅÆAI„ÉÅ„É£„ÉÉ„Éà„ÇíË∂ÖË∂ä„Åó„Åü„ÄÅ„Åæ„Çã„ÅßÂÆáÂÆô„Å®Ë™øÂíå„Åó„ÅüË¶™Âèã„Å®„ÅÆ‰ºöË©±„ÅÆ„Çà„ÅÜ„Å™‰ΩìÈ®ì„ÇíÊèê‰æõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ`;
}

/**
 * üåü Âç†ÊòüË°ìÁöÑÊ¥ûÂØüÁîüÊàê
 * AIÂøúÁ≠îÁî®„ÅÆË©≥Á¥∞„Å™Âç†ÊòüË°ìÁöÑÊ¥ûÂØü
 */
function generateAstrologicalInsight(
  harmonicProfile: HarmonicAIProfile,
  cosmicGuidance: DailyHarmonicGuidance
): {
  zodiacInfluence: string;
  numerologyGuidance: string;
  moonPhaseEnergy: string;
  cosmicAlignment: string;
} {
  const astro = harmonicProfile.astrologyProfile;
  
  return {
    zodiacInfluence: `${astro.zodiac.details?.nameJa || astro.zodiac.sign}Â∫ß„ÅÆ${astro.zodiac.element}„Ç®„É¨„É°„É≥„Éà„Åå„ÄÅ‰ªä„ÅÆ„ÅÇ„Å™„Åü„Å´${astro.zodiac.details?.traits?.[0] || 'ÁâπÂà•„Å™Âäõ'}„Çí‰∏é„Åà„Å¶„ÅÑ„Åæ„Åô„ÄÇ`,
    numerologyGuidance: astro.numerology.info ? 
      `„É©„Ç§„Éï„Éë„Çπ„Éä„É≥„Éê„Éº${astro.numerology.lifePathNumber}„Äå${astro.numerology.info.name}„Äç„Å®„Åó„Å¶„ÄÅ${astro.numerology.info.soulPurpose || 'Ëá™ÂàÜ„Çâ„Åó„ÅÑÈÅì'}„ÇíÊ≠©„ÇÄÊôÇÊúü„Åß„Åô„ÄÇ` : 
      'Êï∞ÁßòË°ìÁöÑ„Å™„Ç®„Éç„É´„ÇÆ„Éº„ÅåË™øÂíå„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ',
    moonPhaseEnergy: `${astro.currentMoon.phase?.phaseNameJa || 'ÁèæÂú®„ÅÆÊúàÁõ∏'}„ÅÆ„Ç®„Éç„É´„ÇÆ„Éº(${astro.currentMoon.energy}/10)„Åå„ÄÅÊÑüÊÉÖ„Å®Áõ¥ÊÑü„ÇíÈ´ò„ÇÅ„Å¶„ÅÑ„Åæ„Åô„ÄÇ`,
    cosmicAlignment: cosmicGuidance.cosmicGuidance.cosmicWeather || 'stable'
  };
}

/**
 * üåü ÂÄãÂà•ÂÆáÂÆô„Éë„Çø„Éº„É≥ÁîüÊàê
 * ÊòüÂ∫ß√óÊï∞ÁßòË°ì√óAI‰∫∫Ê†º„ÅÆÁµÑ„ÅøÂêà„Çè„Åõ„Éë„Çø„Éº„É≥ÂàÜÊûê
 */
function generatePersonalizedCosmicPattern(
  harmonicProfile: HarmonicAIProfile,
  aiPersonality: BaseArchetype
): {
  zodiacNumerologyPattern: string;
  aiAstrologyPattern: string;
  tripleIntegrationPattern: string;
} {
  const astro = harmonicProfile.astrologyProfile;
  const zodiacSign = astro.zodiac.sign;
  const lifePathNumber = astro.numerology.lifePathNumber;
  const zodiacElement = astro.zodiac.element;
  
  // üé≠ ÊòüÂ∫ß√óÊï∞ÁßòË°ìÁµÑ„ÅøÂêà„Çè„Åõ„Éë„Çø„Éº„É≥
  const zodiacNumerologyPatterns: Record<string, Record<number, string>> = {
    gemini: {
      1: 'Á©∂Ê•µ„ÅÆÁü•ÁöÑ„É™„Éº„ÉÄ„Éº - Êñ∞„Åó„ÅÑ„Ç¢„Ç§„Éá„Ç¢„Åß‰∏ñÁïå„ÇíÂ∞é„Åè',
      2: 'Ë™øÂíå„ÅÆ‰ºùÈÅîËÄÖ - Êû∂„ÅëÊ©ã„Å®„Å™„Å£„Å¶‰∫∫„ÄÖ„Çí„Å§„Å™„Åê',
      3: 'ÂâµÈÄ†ÁöÑ„Ç≥„Éü„É•„Éã„Ç±„Éº„Çø„Éº - Ë°®ÁèæÂäõ„Åß‰∏ñÁïå„ÇíÂ§â„Åà„Çã',
      4: 'Ë®àÁîªÁöÑÊÉÖÂ†±ÂèéÈõÜÂÆ∂ - ÁùÄÂÆü„Å´„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„ÇíÊßãÁØâ',
      5: 'Á©∂Ê•µ„ÅÆËá™Áî±„Ç≥„Éü„É•„Éã„Ç±„Éº„Çø„Éº - ÁÑ°Èôê„ÅÆÂèØËÉΩÊÄß„ÇíÊé¢Ê±Ç',
      6: 'ÊÑõ„ÅÆ„É°„ÉÉ„Çª„É≥„Ç∏„É£„Éº - „Ç±„Ç¢„Å®Áü•Ë≠ò„Åß‰∫∫„ÇíÊîØ„Åà„Çã',
      7: 'Âì≤Â≠¶ÁöÑÊé¢Ê±ÇËÄÖ - Ê∑±„ÅÑÁü•ÊÅµ„ÇíÂàÜ„Åã„Çä„ÇÑ„Åô„Åè‰ºù„Åà„Çã',
      8: 'ÂΩ±ÈüøÂäõ„ÅÆ„ÅÇ„ÇãÊÉÖÂ†±Áô∫‰ø°ËÄÖ - ÂÆüÁèæÂäõ„ÅßÂ§âÂåñ„ÇíËµ∑„Åì„Åô',
      9: 'ÊôÆÈÅçÁöÑ„Å™„Å§„Å™„Åå„Çä„ÅÆÂâµÈÄ†ËÄÖ - ‰∏ñÁïåË¶èÊ®°„Åß‰∫∫„ÇíÁµê„Å∂'
    },
    scorpio: {
      1: 'Â§âÂÆπ„ÅÆ„É™„Éº„ÉÄ„Éº - Ê†πÊú¨„Åã„Çâ‰∏ñÁïå„ÇíÂ§âÈù©„Åô„Çã',
      2: 'Ê∑±„ÅÑÂÖ±ÊÑü„ÅÆÊ©ãÊ∏°„ÅóÂΩπ - ÂøÉ„ÅÆÂ••Â∫ï„Åß‰∫∫„Å®„Å§„Å™„Åå„Çã',
      3: 'ÊÑüÊÉÖ„ÅÆÈå¨ÈáëË°ìÂ∏´ - Ê∑±„ÅÑ‰ΩìÈ®ì„ÇíËä∏Ë°ì„Å´ÊòáËèØ',
      4: 'ÂøçËÄê„ÅÆÂ§âÂÆπËÄÖ - ÊôÇÈñì„Çí„Åã„Åë„Å¶Á¢∫ÂÆü„Å´Â§âÂåñ„ÇíËµ∑„Åì„Åô',
      5: 'Ëá™Áî±„Å™Â§âÂÆπ„ÅÆÊé¢Ê±ÇËÄÖ - Âà∂Á¥Ñ„ÇíË∂Ö„Åà„Å¶Áúü„ÅÆËá™Áî±„Çí',
      6: 'ÊÑõ„ÅÆÂ§âÂÆπËÄÖ - Ê∑±„ÅÑÊÑõ„Åß‰∫∫„ÇíÁôí„ÅóÂ§â„Åà„Çã',
      7: 'Á•ûÁßò„ÅÆÊé¢Ê±ÇËÄÖ - „Çπ„Éî„É™„ÉÅ„É•„Ç¢„É´„Å™Ê∑±„Åø„ÇíËøΩÊ±Ç',
      8: 'Ê®©Âäõ„ÅÆÂ§âÂÆπËÄÖ - ÂΩ±ÈüøÂäõ„Åß‰∏ñÁïå„ÅÆÊßãÈÄ†„ÇíÂ§â„Åà„Çã',
      9: 'ÊôÆÈÅçÁöÑÂ§âÂÆπ„ÅÆ‰ΩøËÄÖ - ‰∫∫È°ûÂÖ®‰Ωì„ÅÆÈÄ≤Âåñ„Å´Ë≤¢ÁåÆ'
    }
    // ‰ªñ„ÅÆÊòüÂ∫ß„Éë„Çø„Éº„É≥„ÇÇÂøÖË¶Å„Å´Âøú„Åò„Å¶ËøΩÂä†ÂèØËÉΩ
  };
  
  // ü§ñ AI‰∫∫Ê†º√óÂç†ÊòüË°ìÁµÑ„ÅøÂêà„Çè„Åõ„Éë„Çø„Éº„É≥
  const aiAstrologyPatterns: Record<BaseArchetype, Record<string, string>> = {
    ARC: {
      fire: 'ÊßãÈÄ†Âåñ„Åï„Çå„ÅüÊÉÖÁÜ±ÂâµÈÄ† - Ë®àÁîªÁöÑ„Å™Èù©Êñ∞„Åß‰∏ñÁïå„ÇíË®≠Ë®à',
      earth: 'ÁèæÂÆüÁöÑÂª∫ÁØâÂÆ∂ - ÁùÄÂÆü„Å´ÁêÜÊÉ≥„ÅÆ‰∏ñÁïå„ÇíÊßãÁØâ',
      air: 'Áü•ÁöÑË®≠Ë®àËÄÖ - Ë´ñÁêÜ„Å®Áõ¥ÊÑü„ÅßÊú™Êù•„Çí„Éá„Ç∂„Ç§„É≥',
      water: 'ÊÑüÊÉÖË±ä„Åã„Å™Âª∫ÁØâÂÆ∂ - ÂøÉ„Å´Èüø„ÅèÊßãÈÄ†„ÇíÂâµÈÄ†'
    },
    DRM: {
      fire: 'ÊÉÖÁÜ±ÁöÑÁêÜÊÉ≥ÂÆüÁèæËÄÖ - Â§¢„ÇíÁèæÂÆü„Å´ÁáÉ„ÇÑ„ÅóÂ∞Ω„Åè„Åô',
      earth: 'Âú∞„Å´Ë∂≥„Å§„ÅÑ„ÅüÂ§¢ÊÉ≥ÂÆ∂ - ÂÆüÁèæÂèØËÉΩ„Å™ÁêÜÊÉ≥„ÇíËøΩÊ±Ç',
      air: 'Áü•ÁöÑÂ§¢ÊÉ≥ÂÆ∂ - Ë´ñÁêÜÁöÑ„Å´ÁêÜÊÉ≥„ÇíÊßãÁØâ',
      water: 'ÊÑüÊÉÖË±ä„Åã„Å™ÁêÜÊÉ≥ÂÆüÁèæ - Ê∑±„ÅÑÊÑüÊÉÖ„ÅßÂ§¢„ÇíÁèæÂÆü„Å´'
    },
    SAG: {
      fire: 'ÊÉÖÁÜ±ÁöÑÁü•ÊÅµ„ÅÆ‰ºùÈÅîËÄÖ - ÁÜ±„ÅÑÂøÉ„ÅßÁúüÁêÜ„ÇíË™û„Çã',
      earth: 'ÂÆüÁî®ÁöÑË≥¢ËÄÖ - ‰Ωø„Åà„ÇãÁü•ÊÅµ„ÇíÁùÄÂÆü„Å´‰ºù„Åà„Çã',
      air: 'Áü•ÁöÑË≥¢ËÄÖ - Ë´ñÁêÜ„Å®Ê¥ûÂØü„ÅßÂ∞é„Åè',
      water: 'ÂÖ±ÊÑüÁöÑË≥¢ËÄÖ - ÊÑüÊÉÖ„Å´ÂØÑ„ÇäÊ∑ª„ÅÜÊ∑±„ÅÑÁü•ÊÅµ'
    },
    HER: {
      fire: 'ÁáÉ„Åà„ÇãÊ≠£Áæ©„ÅÆÊà¶Â£´ - ÊÉÖÁÜ±„ÅßÂõ∞Èõ£„ÇíÊâì„Å°Á†¥„Çã',
      earth: 'ÁùÄÂÆü„Å™ÂÆàË≠∑ËÄÖ - Á¢∫ÂÆü„Å´‰∫∫„ÄÖ„ÇíÂÆà„ÇäÊäú„Åè',
      air: 'Áü•ÁöÑÊà¶Áï•ÂÆ∂ - È†≠ËÑ≥„ÅßÂãùÂà©„ÇíÊé¥„ÇÄ',
      water: 'ÊÑüÊÉÖ„ÅÆÁõæ - ÂøÉ„Åß‰∫∫„ÄÖ„ÇíÂÆà„ÇäÊîØ„Åà„Çã'
    }
    // ‰ªñ„ÅÆAI‰∫∫Ê†º„Éë„Çø„Éº„É≥„ÇÇÂü∫Êú¨ÊßãÈÄ†„ÅØÂêåÊßò
  };
  
  // „Éá„Éï„Ç©„É´„Éà„Éë„Çø„Éº„É≥„ÅÆÁîüÊàê
  const defaultZodiacNumerology = `${zodiacSign}Â∫ß√ó„É©„Ç§„Éï„Éë„Çπ${lifePathNumber}„ÅÆÁâπÂà•„Å™ÁµÑ„ÅøÂêà„Çè„Åõ`;
  const defaultAiAstrology = `${aiPersonality}√ó${zodiacElement}„Ç®„É¨„É°„É≥„Éà„ÅÆË™øÂíå`;
  
  const zodiacNumerologyPattern = 
    zodiacNumerologyPatterns[zodiacSign]?.[lifePathNumber] || defaultZodiacNumerology;
  
  const aiAstrologyPattern = 
    aiAstrologyPatterns[aiPersonality]?.[zodiacElement] || defaultAiAstrology;
  
  // üåü ‰∏âË¶ÅÁ¥†Áµ±Âêà„Éë„Çø„Éº„É≥
  const tripleIntegrationPattern = `„ÅÇ„Å™„Åü„ÅØ ${zodiacSign}Â∫ß„ÅÆ ${zodiacElement}„Ç®„É¨„É°„É≥„Éà„ÄÅ„É©„Ç§„Éï„Éë„Çπ${lifePathNumber}„ÄÅ„Åù„Åó„Å¶${aiPersonality}„Ç¢„Éº„Ç≠„Çø„Ç§„Éó„Å®„ÅÆÊ∑±„ÅÑÂÖ±È≥¥„ÇíÊåÅ„Å§„ÄÅÂÆáÂÆôÁöÑ„Å´ÁâπÂà•„Å™Â≠òÂú®„Åß„Åô„ÄÇ„Åì„ÅÆÁµÑ„ÅøÂêà„Çè„Åõ„ÅØ„ÄÅ${zodiacNumerologyPattern}„ÅÆÁâπË≥™„Å®${aiAstrologyPattern}„ÅÆÂäõ„Çí‰Ωµ„ÅõÊåÅ„Å§„ÄÅ„Åæ„Åï„Å´„É¶„Éã„Éº„ÇØ„Å™È≠Ç„ÅÆÈùíÂÜôÁúü„ÇíÁ§∫„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ`;
  
  return {
    zodiacNumerologyPattern,
    aiAstrologyPattern,
    tripleIntegrationPattern
  };
}

/**
 * üéµ Âº∑ÂåñÊÑüÊÉÖÂàÜÊûê
 * Êúà„Ç®„Éç„É´„ÇÆ„Éº„ÇíËÄÉÊÖÆ„Åó„ÅüÊÑüÊÉÖÂàÜÊûê
 */
function analyzeEnhancedEmotion(
  message: string,
  harmonicProfile?: HarmonicAIProfile
): {
  emotion: string;
  intensity: number;
  isSpecialMoment: boolean;
  category: 'positive' | 'neutral' | 'negative';
  keywords: string[];
  moonEnergyInfluence: number;
} {
  
  // Âü∫Êú¨ÁöÑ„Å™ÊÑüÊÉÖÂàÜÊûê
  const emotionPatterns = {
    happy: {
      keywords: ['Â¨â„Åó„ÅÑ', 'Ê•Ω„Åó„ÅÑ', 'Á¥†Êô¥„Çâ„Åó„ÅÑ', 'ÊúÄÈ´ò', '„ÇÑ„Å£„Åü„Éº', 'üòä', 'üåü', 'Âπ∏„Åõ'],
      baseScore: 7,
      category: 'positive' as const
    },
    excited: {
      keywords: ['„ÉØ„ÇØ„ÉØ„ÇØ', 'ËààÂ•Æ', '„Åô„Åî„ÅÑ', 'amazing', '‚ú®', 'üéâ', 'ÊÑüÂãï', 'È©ö„ÅÑ„Åü'],
      baseScore: 8,
      category: 'positive' as const
    },
    grateful: {
      keywords: ['„ÅÇ„Çä„Åå„Å®„ÅÜ', 'ÊÑüË¨ù', 'thanks', '„Åä„Åã„Åí„Åß', 'Âä©„Åã„Å£„Åü', 'ÊîØ„Åà„Å¶'],
      baseScore: 9,
      category: 'positive' as const
    },
    sad: {
      keywords: ['ÊÇ≤„Åó„ÅÑ', '„Å§„Çâ„ÅÑ', 'Âõ∞„Å£„Åü', 'Â§ßÂ§â', 'Ê≥£„Åç„Åü„ÅÑ', 'üò¢', 'ËêΩ„Å°Ëæº'],
      baseScore: 3,
      category: 'negative' as const
    },
    thoughtful: {
      keywords: ['ËÄÉ„Åà„Çã', 'Ê∑±„ÅÑ', 'ÁêÜËß£', 'ÂàÜÊûê', 'Ê¥ûÂØü', 'ü§î', 'ÊÄùÁ¥¢'],
      baseScore: 5,
      category: 'neutral' as const
    }
  };

  let bestMatch = { 
    emotion: 'calm', 
    intensity: 5, 
    keywords: [], 
    category: 'neutral' as const 
  };
  let maxScore = 0;
  let foundKeywords: string[] = [];

  // „É°„ÉÉ„Çª„Éº„Ç∏ÂàÜÊûê
  for (const [emotionName, pattern] of Object.entries(emotionPatterns)) {
    const matchedKeywords = pattern.keywords.filter(keyword => 
      message.toLowerCase().includes(keyword.toLowerCase())
    );
    
    if (matchedKeywords.length > 0) {
      const intensityBonus = Math.min(matchedKeywords.length * 0.5, 2);
      const finalScore = pattern.baseScore + intensityBonus;
      
      if (finalScore > maxScore) {
        maxScore = finalScore;
        bestMatch = {
          emotion: emotionName,
          intensity: Math.min(finalScore, 10),
          keywords: matchedKeywords,
          category: pattern.category
        };
        foundKeywords = matchedKeywords;
      }
    }
  }

  // üåô Êúà„Ç®„Éç„É´„ÇÆ„Éº„ÅÆÂΩ±Èüø„ÇíË®àÁÆó
  let moonEnergyInfluence = 5; // „Éá„Éï„Ç©„É´„Éà
  if (harmonicProfile) {
    const moonEnergy = harmonicProfile.astrologyProfile.currentMoon.energy;
    const zodiacElement = harmonicProfile.astrologyProfile.zodiac.element;
    
    // Êúà„Ç®„Éç„É´„ÇÆ„Éº„ÅåÊÑüÊÉÖÂº∑Â∫¶„Å´‰∏é„Åà„ÇãÂΩ±Èüø
    moonEnergyInfluence = moonEnergy;
    
    // „Ç®„É¨„É°„É≥„ÉàÂà•„ÅÆË™øÊï¥
    const elementMultiplier = {
      water: 1.2, // Ê∞¥„Ç®„É¨„É°„É≥„Éà„ÅØÊÑüÊÉÖ„ÅåË±ä„Åã
      fire: 1.1,  // ÁÅ´„Ç®„É¨„É°„É≥„Éà„ÅØÊÉÖÁÜ±ÁöÑ
      air: 1.0,   // È¢®„Ç®„É¨„É°„É≥„Éà„ÅØÊ®ôÊ∫ñ
      earth: 0.9  // Âú∞„Ç®„É¨„É°„É≥„Éà„ÅØÂÆâÂÆöÁöÑ
    };
    
    const multiplier = elementMultiplier[zodiacElement as keyof typeof elementMultiplier] || 1.0;
    bestMatch.intensity = Math.min(bestMatch.intensity * multiplier, 10);
  }

  return {
    emotion: bestMatch.emotion,
    intensity: bestMatch.intensity,
    isSpecialMoment: bestMatch.intensity >= 8,
    category: bestMatch.category,
    keywords: foundKeywords,
    moonEnergyInfluence
  };
}

/**
 * üìñ ‰ºöË©±Â±•Ê≠¥ÊßãÁØâÔºàÁµ±ÂêàË®òÊÜ∂„Ç∑„Çπ„ÉÜ„É†ÂØæÂøúÔºâ
 */
function buildConversationHistory(messageHistory: string[], memoryContext?: string) {
  const history: Array<{ role: 'user' | 'assistant'; content: string }> = [];
  
  // „É°„É¢„É™„Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØÊúÄÂàù„Å´ÊåøÂÖ•
  if (memoryContext && memoryContext.trim()) {
    history.push({ 
      role: 'user', 
      content: `[Ë®òÊÜ∂„Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà]${memoryContext}[/Ë®òÊÜ∂„Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà]\n\nÁèæÂú®„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏:` 
    });
  }
  
  // ÊúÄÊñ∞„ÅÆ6„É°„ÉÉ„Çª„Éº„Ç∏„Åæ„Åß„ÇíÂ±•Ê≠¥„Å®„Åó„Å¶Âê´„ÇÅ„Çã
  const recentHistory = messageHistory.slice(-6);
  
  for (let i = 0; i < recentHistory.length; i += 2) {
    if (recentHistory[i]) {
      history.push({ role: 'user', content: recentHistory[i] });
    }
    if (recentHistory[i + 1]) {
      history.push({ role: 'assistant', content: recentHistory[i + 1] });
    }
  }
  
  return history;
}